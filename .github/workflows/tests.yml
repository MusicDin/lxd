name: Tests
on:
  - push
  - pull_request

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  code-tests:
    env:
      CGO_CFLAGS: "-I/home/runner/work/lxd/lxd/lxd-test/vendor/raft/include/ -I/home/runner/work/lxd/lxd/lxd-test/vendor/dqlite/include/"
      CGO_LDFLAGS: "-L/home/runner/work/lxd/lxd/lxd-test/vendor/raft/.libs -L/home/runner/work/lxd/lxd/lxd-test/vendor/dqlite/.libs/"
      LD_LIBRARY_PATH: "/home/runner/work/lxd/lxd/lxd-test/vendor/raft/.libs/:/home/runner/work/lxd/lxd/lxd-test/vendor/dqlite/.libs/"
      CGO_LDFLAGS_ALLOW: "(-Wl,-wrap,pthread_create)|(-Wl,-z,now)"
      CGO_ENABLED: 1
    name: Code tests
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Dependency Review
        uses: actions/dependency-review-action@v3
        if: github.event_name == 'pull_request'

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.18.x

      - name: Install dependencies
        run: |
          sudo add-apt-repository ppa:ubuntu-lxc/lxc-git-master -y --no-update
          sudo apt-get update

          sudo apt-get install --no-install-recommends -y \
            curl \
            gettext \
            git \
            libacl1-dev \
            libcap-dev \
            libdbus-1-dev \
            liblxc-dev \
            lxc-templates \
            libseccomp-dev \
            libselinux-dev \
            libsqlite3-dev \
            libtool \
            libudev-dev \
            libuv1-dev \
            make \
            pkg-config \
            shellcheck \
            acl \
            attr \
            autoconf \
            automake \
            dnsmasq-base \
            liblxc1 \
            liblz4-dev \
            rsync \
            tcl \
            xz-utils \
            ebtables \
            sqlite3 \
            build-essential

          sudo apt list --installed

          python3 -m pip install flake8

      - name: Download go dependencies
        run: |
          go mod download

      - name: Make LXD tarball and unpack it
        env:
          CUSTOM_VERSION: "test"
        run: |
          make dist
          tar -xzf lxd-test.tar.gz

      - name: Build LXD dependencies
        run: |
          cd lxd-test
          make deps

      - name: Run LXD build
        run: |
          cd lxd-test
          make

      - name: Cleanup generated files
        run: |
          rm -rf lxd-test
          sudo rm -f /tmp/lxddoc.log

      - name: Run static analysis
        run: |
          make static-analysis

      - name: Unit tests (all)
        run: |
          sudo go test ./...
