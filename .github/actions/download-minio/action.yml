name: Download minio/mc
description: Download minio/mc binaries and cache them using GitHub's default cache eviction policy (currently 7 days)

inputs:
  prime-cache-only:
    description: 'Set to true to only populate cache on miss without restoring files. When false (default), cache will be restored if available.'
    default: false
    required: false
    type: boolean

runs:
  using: composite
  steps:
    - name: minio cache key
      id: minio-cache-key
      shell: bash
      run: |
        set -eux
        ARCH="$(dpkg --print-architecture)"

        # To download the binaries for the right arch.
        echo "ARCH=${ARCH}" >> $GITHUB_OUTPUT

        # i.e: minio-amd64
        echo "KEY=minio-${ARCH}" >> $GITHUB_OUTPUT

    # GitHub will remove any cache entries that have not been accessed in over 7 days.
    # https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/caching-dependencies-to-speed-up-workflows#usage-limits-and-eviction-policy
    - name: Cache minio/mc binaries
      uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
      id: cache-minio
      with:
        path: |
          /home/runner/go/bin/minio
          /home/runner/go/bin/mc
        key: ${{ steps.minio-cache-key.outputs.KEY }}
        # Some jobs only want to prime the cache if not populated already.
        # Those jobs don't need the files otherwise so they should not restore
        # from the cache.
        lookup-only: ${{ inputs.prime-cache-only }}

    - name: Download minio/mc
      if: ${{ steps.cache-minio.outputs.cache-hit != 'true' }}
      env:
        ARCH: ${{ steps.minio-cache-key.outputs.ARCH }}
      shell: bash
      run: |
        set -eux

        . test/includes/setup.sh

        download_minio
